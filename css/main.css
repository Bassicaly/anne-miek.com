*{
	margin: 0px;
	padding: 0px;
}
header, section, footer, aside, nav, article, hgroup{
	display: block;
}
body{
	width: 100%;
	font-family: Verdana;
	display: flex;
	justify-content: center;
	background: lightgrey;
}
h1{

}
h2{
	margin-bottom: .5em;
}
p{
	margin-bottom: .5em;
}
#wrapper{
	max-width: 1000px;
	margin: 20px 0px;
	display: flex;
	flex-direction: column;
	background-repeat: no-repeat;
	background-size: 100%;
	background-image: url(/img/lotus_trans.png);
}
#top_header{
	display:flex;
	background-image: linear-gradient(90deg,rgba(255,255,0,0),rgba(255,255,0,1));
	outline: 1px solid blue;
	justify-content: center;
}
#top_menu{
}
/**
 * See: http://www.css-101.org/articles/ken-burns_effect/css-transition.php
 */

/**
 * Styling the container (the wrapper)
 * 
 * position is used to make this box a containing block (it becomes a reference for its absolutely positioned children). overflow will hide part of the images moving outside of the box.
 */

#slideshow {
    position:relative;
    width:800px;
    height:400px;
    overflow:hidden;
    border:8px solid #ccc;
}

/**
 * Styling the images
 *
 * position:absolute is to put all images in a stack. Dimensions are set to increase the size of these images so their edges do not appear in the parent box when we move them inside the said box.
 * Because the images are now larger than their parent container, we use top, left and margin values to align them in the center of the box.
 * Finally, we set the transition (property and duration). Note that duration values are different for opacity and transform as we want the "fade-in" effect to be faster than the "panning" effect.
 */

#slideshow img {
    position:absolute;
    width:800px;
    height:400px;
    top:50%;
    left:50%;
    margin-left:-400px;
    margin-top:-200px;
    opacity:0;
    -webkit-transition-property: opacity, -webkit-transform;
    -webkit-transition-duration: 3s, 10s;
       -moz-transition-property: opacity, -moz-transform;
       -moz-transition-duration: 3s, 10s;
        -ms-transition-property: opacity, -ms-transform;
        -ms-transition-duration: 3s, 10s;
         -o-transition-property: opacity, -o-transform;
         -o-transition-duration: 3s, 10s;
            transition-property: opacity, transform;
            transition-duration: 3s, 10s;
}

/**
 * We change the point of origin using four corners so images do not move in the same direction. 
 * This technique allows us to create various paths while applying the same translate() values to all images (see the 'fx' class further below).
 */

#slideshow img  {
    -webkit-transform-origin: bottom left;
       -moz-transform-origin: bottom left;
        -ms-transform-origin: bottom left;
         -o-transform-origin: bottom left;
            transform-origin: bottom left;
}

#slideshow :nth-child(2n+1) {
    -webkit-transform-origin: top right;
       -moz-transform-origin: top right;
        -ms-transform-origin: top right;
         -o-transform-origin: top right;
            transform-origin: top right;
}

#slideshow :nth-child(3n+1) {
    -webkit-transform-origin: top left;
       -moz-transform-origin: top left;
        -ms-transform-origin: top left;
         -o-transform-origin: top left;
            transform-origin: top left;
}
#slideshow :nth-child(4n+1) {
  -webkit-transform-origin: bottom right;
     -moz-transform-origin: bottom right;
      -ms-transform-origin: bottom right;
       -o-transform-origin: bottom right;
          transform-origin: bottom right;
}

/**
 * Because of the stacking context, we need to make sure that the first image (in source) is not hidden by the last one. 
 * The rule below moves all images past the second one down the stack. 
 * This is because the second image needs to show on top of the first one when it transitions in.
 */

#slideshow .fx:first-child + img ~ img  {
    z-index:-1;
}

/**
 * Because images are styled with a different point of origin, the following rule will create different panning effects.
 */

#slideshow .fx {
    opacity:1;
    -webkit-transform: scale(1.1);
       -moz-transform: scale(1.1);
        -ms-transform: scale(1.1);
         -o-transform: scale(1.1);
            transform: scale(1.1);
}

#slideshow h1{
	position: absolute;
	width: 100%;
	top: 50%;
	font-size: 3.5em;
	margin-top: -1em;
	z-index: 10;
	text-align: center;
	color: rgba(255,0,0,0.7);
	background: rgba(0,255,255,0.3);
}

#main_section{
	float: left;
	width: auto;
	margin: 30px; /* 720px, 280 left */
}
#news_left{
	float: left;
	width: 220px;
	margin: 20px 0;
	padding: 30px;
}
#news_right{
	float: right;
	width: 220px;
	margin: 20px 0;
	padding: 30px;
}
#the_footer{
	clear:both;
	text-align: center;
	padding: 20px;
	border-top: 2px solid black;
}

ul#navmenu, ul.sub1, ul.sub2 {
	list-style-type: none;
	
}

ul#navmenu li {
	width: 125;
	text-align: center;
	position: relative;
	float: left;
	margin-right: 4px;
}

ul#navmenu a {
	text-decoration: none;
	display: block;
	width: 125px;
	height: 25px;
	line-height: 25px;
	background-color:#CCC;
	border-radius: 5px;
}

ul#navmenu .sub1 a {
	margin-top: 3px;
}

ul#navmenu .sub2 a {
	margin-left: 10px;
}

ul#navmenu li:hover > a {
	background-color: #CFC;
}

ul#navmenu li:hover a:hover {
	background-color: #FF0;
}

ul#navmenu ul.sub1 {
	display: none;
	position: absolute;
	top: 26px;
	left: 0px;
}

ul#navmenu ul.sub2 {
	display: none;
	position: absolute;
	top: 0px;
	left: 126px;
}

ul#navmenu li:hover .sub1 {
	display: block;
}

ul#navmenu .sub1 li:hover .sub2 {
	display: block;
}